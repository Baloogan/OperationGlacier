@{
    ViewBag.Title = ViewBag.Side + " " + ViewBag.Date;
}
@Styles.Render("~/Content/leaflet.css")
@Scripts.Render("~/Scripts/leaflet.js")
@Scripts.Render("~/Scripts/handlebars-v3.0.1.js")
<div id="map" style="width: 100%; height: 100%; background: black;"></div>
<style>
    body {
        background: black;
    }

    .container {
        margin-left: 0px;
        margin-right: 0px;
        width: 100%;
        max-width: none;
        background: black;
        overflow: hidden;
        height: 100%;
    }

    .body-content {
        padding: 0;
    }

    html, body {
        height: 100%;
        margin: 0;
        padding-bottom: 0;
    }

    #wrapper {
        min-height: 100%;
    }

    .leaflet-popup {
        width: 500px;
    }
</style>

<script>

    var map = L.map('map', {
        crs: L.CRS.Simple,
        center: [-78, 95],
        zoom: 3,
    });

    //L.tileLayer('https://secure.baloogancampaign.com:8081/map/render3/{z}/{x}/{y}.png', {
    L.tileLayer('https://web196.secure-secure.co.uk/baloogancampaign.com/render3/{z}/{x}/{y}.png', {
        attribution: '@Ajax.JavaScriptStringEncode(ViewBag.Side) @Ajax.JavaScriptStringEncode(ViewBag.Date) WitP-AE Topo Map Project',
        continuousWorld: true,
        id: 'map-render3',
        maxZoom: 6,
        minZoom: 3,
        noWrap: true,
    }).addTo(map);

    map.zoomControl.setPosition('topright');
    map.setMaxBounds([[-138, 12], [0, 170]]);
    L.Circle = L.Circle.extend({
        projectLatlngs: function () {
            //this._point = this._map.latLngToLayerPoint(this._latlng);
            //this._radius = this._mRadius;
            var lngRadius = this._mRadius,
                latlng2 = new L.LatLng(this._latlng.lat, this._latlng.lng - lngRadius),
                point2 = this._map.latLngToLayerPoint(latlng2);

            this._point = this._map.latLngToLayerPoint(this._latlng);
            this._radius = Math.max(Math.round(this._point.x - point2.x), 1);
        },

        getBounds: function () {
            var radius = this._mRadius,
                latlng = this._latlng,
                sw = new L.LatLng(latlng.lat - radius, latlng.lng - radius),
                ne = new L.LatLng(latlng.lat + radius, latlng.lng + radius);

            return new L.LatLngBounds(sw, ne);
        }
    });
    function isEven(n) {
        return n == parseFloat(n) ? !(n % 2) : void 0;
    }
</script>

@RenderPage("../Includes/HandlebarsTemplates.cshtml")
@RenderPage("_HexRender.cshtml")
@RenderPage("_DownloadTurns.cshtml")
